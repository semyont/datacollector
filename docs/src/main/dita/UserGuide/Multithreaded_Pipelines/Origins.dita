<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_wcz_tpd_py">
    <title>Origins for Multithreaded Pipelines</title>
    <conbody>
        <p><indexterm>multithreaded
                    pipelines<indexterm>origins</indexterm></indexterm><indexterm>origins<indexterm>for
                    multithreaded pipelines</indexterm></indexterm>You can use the following origins
            to create multithreaded pipelines:<ul id="ul_d2v_vpd_py">
                <li><xref href="../Origins/HTTPServer.dita#concept_s2p_5hb_4y">HTTP Server</xref> -
                    Listens on a HTTP endpoint and processes the contents of all authorized HTTP
                    POST requests. </li>
                <li><xref href="../Pipeline_Design/DevStages.dita#concept_czx_ktn_ht">Dev Data
                        Generator</xref> - Generates random data for development and testing.</li>
            </ul></p>
        <p>Note that <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            provides several "to Kafka" multithreaded origins: <xref
                href="../Origins/HTTPtoKafka.dita#concept_izh_mqd_dy">HTTP to Kafka</xref>, <xref
                href="../Origins/SDCRPCtoKafka.dita#concept_tdk_slk_pw">SDC RPC to Kafka</xref>, and
                <xref href="../Origins/UDPtoKafka.dita#concept_jzq_jcz_pw">UDP to Kafka</xref>.
            These origins write incoming data directly to Kafka with no additional processing. They
            do not create full multithreaded pipelines. </p>
    </conbody>
</concept>
