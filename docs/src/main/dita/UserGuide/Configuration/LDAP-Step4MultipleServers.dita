<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_o4n_gvs_5x">
 <title>Step 4. Configure Multiple LDAP Servers (Optional)</title>
 <shortdesc>If your organization has multiple LDAP servers, you can configure <ph
            conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/> to
        connect to each of the servers.</shortdesc>
 <conbody>
        <p>The steps that you complete to configure multiple LDAP servers depend on the following
            installation types:</p>
        <dl>
            <dlentry>
                <dt>Installation from the tarball, RPM package, or Docker Hub</dt>
                <dd>To configure multiple LDAP servers, simply configure the connection information
                    for the additional LDAP servers in the
                        <codeph>$SDC_CONF/ldap-login.conf</codeph>. Then, restart <ph
                        conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                    /> to enable the changes.</dd>
            </dlentry>
        </dl>
        <dl>
            <dlentry>
                <dt>Cloudera Manager installation</dt>
                <dd>For a Cloudera Manager installation, configure the connection information for
                    the additional LDAP servers in an advanced configuration snippet - or safety
                    valve - within Cloudera Manager.</dd>
                <dd>In Cloudera Manager, select the StreamSets service, then click
                        <uicontrol>Configuration</uicontrol>. Select <uicontrol>Use Safety Valve to Edit LDAP
                        Information</uicontrol>, and then configure the connection information for
                    all of the LDAP servers in the <uicontrol>Data Collector Advanced Configuration
                        Snippet for ldap.login.conf</uicontrol> safety valve. </dd>
                <dd>When you configure multiple LDAP servers in the safety valve, Cloudera Manager
                    ignores all values entered for the <codeph>ldap.*</codeph> properties in the
                        <uicontrol>Configuration</uicontrol> tab.</dd>
            </dlentry>
        </dl>
        <p>Use the following guidelines when configuring multiple LDAP servers:</p>
        <ul id="ul_dq5_rvs_5x">
            <li>The LDAP user account used to log in to <ph
                    conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                /> must be registered in at least one of the configured LDAP servers to be
                authenticated.</li>
            <li>If the LDAP user accounts belong to different LDAP groups in each LDAP server,
                include all of the group names when you map LDAP groups to <ph
                    conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"
                /> roles in the <codeph>$SDC_CONF/sdc.properties</codeph> file.</li>
            <li>If the additional LDAP servers use different passwords for bindDN - the root
                distinguished name (DN) for the connection - then directly define the passwords in
                the bindPassword property. </li>
        </ul>
        <note>When you configure multiple LDAP servers, <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            attempts to connect to each server in the order listed in the
                <codeph>ldap-login.conf</codeph> file. If <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            successfully authenticates the user account in one of the LDAP servers, <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            still continues to authenticate with the remaining LDAP servers. This can cause the <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>
            log file to include login failure error messages. You can ignore these error
            messages.</note>
        <p>The following example shows an <cmdname>ldap-login.conf</cmdname> file configured to
            connect to two OpenLDAP servers, server1 and server2. Each server uses the same password
            for bindDN:</p><codeblock>ldap {
  com.streamsets.datacollector.http.LdapLoginModule required
  debug="true"
  useLdaps="false"
  useStartTLS="false"
  contextFactory="com.sun.jndi.ldap.LdapCtxFactory"
  hostname="server1" 
  port="389"                 
  bindDn="*******"
  bindPassword="@ldap-bind-password.txt@"  
  forceBindingLogin="true"
  userBaseDn="ou=People,dc=example,dc=org"
  userIdAttribute="uid"
  userPasswordAttribute="userPassword"
  userObjectClass="inetOrgPerson"
  userFilter="uid={user}"
  roleBaseDn="ou=Groups,dc=example,dc=org"
  roleNameAttribute="cn"
  roleMemberAttribute="member"
  roleObjectClass="groupOfNames"
  roleFilter="member={dn}";


  com.streamsets.datacollector.http.LdapLoginModule required
  debug="true"
  useLdaps="false"
  useStartTLS="false"
  contextFactory="com.sun.jndi.ldap.LdapCtxFactory"
  hostname="server2" 
  port="389"                
  bindDn="*******"
  bindPassword="@ldap-bind-password.txt@"  
  forceBindingLogin="true"
  userBaseDn="ou=People,dc=example,dc=org"
  userIdAttribute="uid"
  userPasswordAttribute="userPassword"
  userObjectClass="inetOrgPerson"
  userFilter="uid={user}"
  roleBaseDn="ou=Groups,dc=example,dc=org"
  roleNameAttribute="cn"
  roleMemberAttribute="member"
  roleObjectClass="groupOfNames"
  roleFilter="member={dn}";
};</codeblock>
 </conbody>
</concept>
