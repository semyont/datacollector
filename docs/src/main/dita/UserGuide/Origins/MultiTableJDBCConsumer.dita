<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_zp3_wnw_4y">
 <title>JDBC Multitable Consumer</title>
 <shortdesc>The JDBC Multitable Consumer origin reads database data from multiple tables through a
        JDBC connection. The origin returns data as a map with column names and field
        values.</shortdesc>
 <conbody>
  <p><indexterm>origins<indexterm>JDBC Multitable Consumer</indexterm></indexterm><indexterm>JDBC
                Multitable Consumer origin<indexterm>overview</indexterm></indexterm>When you
            configure the origin, you define groups of database tables to read. The origin generates
            SQL queries based on the table configurations that you define. Use the JDBC Multitable
            Consumer origin to read multiple tables in the same database. For example, you might
            want to use the origin for database replication.</p>
        <note>To configure your own SQL query to read database data from a single table or from a
            join of tables, use the <xref href="JDBCConsumer.dita#concept_qhf_hjr_bs"/>
            origin.</note>
        <p>When you configure JDBC Multitable Consumer, you specify connection information, a query
            interval, and custom JDBC configuration properties to determine how the origin connects
            to the database. </p>
        <p>You define a table configuration for each group of tables that you want to read. You also
            define the strategy that the origin uses to create each batch of data and the order that
            the origin uses to read the tables.</p>
        <p>When the pipeline stops, JDBC Multitable Consumer notes where it stops reading. When the
            pipeline starts again, JDBC Multitable Consumer continues processing from where it
            stopped by default. You can reset the origin to process all available data.</p>
        <p>To use a JDBC version older than 4.0, you can specify the driver class name and define a
            health check query.</p>
 </conbody>
</concept>
