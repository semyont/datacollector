<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ldf_chp_qy">
 <title>Multithreaded Processing</title>
 <conbody>
  <p><indexterm>HTTP Server origin<indexterm>multithreaded
                processing</indexterm></indexterm><indexterm>Max Concurrent Requests<indexterm>HTP
                    Server m</indexterm></indexterm>The HTTP Server origin performs parallel
            processing and enables the creation of a multithreaded pipeline. </p>
        <p>The HTTP Server origin uses multiple concurrent threads based on the Max Concurrent
            Requests property. <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-def1"
            /></p>
        <p><ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/ph-MultiThread-def2"
            /></p>
        <p>For example, say you set the Max Concurrent Requests property to 5. When you start the
            pipeline, <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HTTPServer-process-ph"
            /> In the batch, HTTP Server includes only the HTTP POST requests with the specified
            Application ID. </p>
        <p>Conceptually, the multithreaded pipeline looks like this:</p>
        <p><image href="../Graphics/Multithread-HTTPThreads.png" id="image_r5x_532_ry" scale="70"
            /></p>
        <p>Each pipeline runner performs the processing associated with the rest of the pipeline.
            After a batch is written to pipeline destinations, the pipeline runner becomes available
            for another batch of data. Each batch is processed and written as quickly as possible,
            independent from other batches processed by other pipeline runners, so batches may be
            written differently from the read-order.</p>
        <p conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/HTTPServer-process-p"/>
        <p>For more information about multithreaded pipelines, see <xref
                href="../Multithreaded_Pipelines/MultithreadedPipelines_Overview.dita#concept_zpp_2xc_py"
            />.</p>
 </conbody>
</concept>
