<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ank_41x_4y">
 <title>Table Name Pattern</title>
 <shortdesc>You define the group of tables that the JDBC Multitable Consumer origin reads by
        defining a table name pattern for the table configuration. The origin reads all tables whose
        names match the pattern. </shortdesc>
 <conbody>
  <p><indexterm>JDBC Multitable Consumer origin<indexterm>table name
                pattern</indexterm></indexterm><indexterm>JDBC Multitable Consumer
                    origin<indexterm>table exclusion pattern</indexterm></indexterm><indexterm>table
                name pattern<indexterm>JDBC Multitable Consumer
                origin</indexterm></indexterm><indexterm>table exclusion pattern<indexterm>JDBC
                    Multitable Consumer origin</indexterm></indexterm>The table name pattern uses
            the SQL LIKE syntax. For example, the LIKE syntax uses the percentage wildcard (%) to
            represent any string of zero or more characters. The table name pattern
                <codeph>st%</codeph> matches tables whose names start with "st". The default table
            name pattern <codeph>%</codeph> matches all tables in the schema.</p>
        <p>For more information about valid patterns for the SQL LIKE syntax, see <xref
                href="https://msdn.microsoft.com/en-us/library/ms179859.aspx" format="html"
                scope="external"/>.</p>
        <p>You can optionally define a table exclusion pattern to exclude some tables from being
            read. The table exclusion pattern uses a Java-based regular expression, or regex. For
            more information about using regular expressions with <ph
                conref="../Reusable_Content/ReusablePhrases.dita#concept_vhs_5tz_xp/pName-long"/>,
            see <xref href="../Apx-RegEx/RegEx-Overview.dita#concept_vd4_nsc_gs"/>.</p>
        <p>For example, let's say that you want to read all tables in the schema except for tables
            that start with "dept". You enter the following table name and table exclusion patterns:
                <ul id="ul_z3z_h2r_qy">
                <li>Table Name Pattern - %</li>
                <li>Table Exclusion Pattern - dept.*</li>
            </ul></p>
        <p>If you do not need to exclude any tables, simply leave the table exclusion pattern
            empty.</p>
 </conbody>
</concept>
